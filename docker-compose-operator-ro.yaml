version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    expose:
      - "5432"
    ports:
      - "0.0.0.0:5432:5432"
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - net

  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
    entrypoint: /bin/sh
    command: proxy/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      FAUCET_URL: http://faucet:3333
      PROXY_URL: http://proxy:9090/solana
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      NEON_CLI_DEBUG_LOG: "YES"
      FUZZING_BLOCKHASH: "NO"
      GATHER_STATISTICS: "YES"
      # Comment next two lines, if you want local stand without real gas-price
      #PP_SOLANA_URL: ${CI_PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: "BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2"
      #
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
      # Set to 0 + Comment PYTH configuration above, if you want 0 gas-price
      MINIMAL_GAS_PRICE: 1
      #
      ENABLE_PRIVATE_API: "YES"
      ALLOW_UNDERPRICED_TX_WITHOUT_CHAINID: "YES"
      LOG_FULL_OBJECT_INFO: "NO"
      EVM_LOADER: eeLSJgWzzxrqKv1UxtRVVH8FX3qCQWUs9QuAjJpETGU
      RUST_BACKTRACE: ${RUST_BACKTRACE:-0}
      ENABLE_SEND_TX_API: "NO"
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
    ports:
      - "0.0.0.0:9090:9090"
      - "0.0.0.0:8881:8888"
    expose:
      - "8888"
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-proxy.sh
    healthcheck:
      test: [ CMD-SHELL, "/opt/health_check_proxy.sh" ]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      GATHER_STATISTICS: "YES"
      LOG_FULL_OBJECT_INFO: "NO"
      EVM_LOADER: eeLSJgWzzxrqKv1UxtRVVH8FX3qCQWUs9QuAjJpETGU
    hostname: indexer
    depends_on:
      dbcreation:
        condition: service_completed_successfully
    expose:
      - "8887"
    ports:
      - "0.0.0.0:8882:8888"
    networks:
      - net
    entrypoint: proxy/run-indexer.sh

networks:
  net:
    name: neon

volumes:
  db:
    driver: local
